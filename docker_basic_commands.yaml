-----------------------------------------------------------------------------------------
DOCKER BASIC COMMANDS 
-----------------------------------------------------------------------------------------
docker version

docker info

docker 

docker pull hello-world

docker image ls

docker container ls -a

docker ps

docker login infydp.ad.infosys.com:8082
-----------------------------------------------------------------------------------------
DOCKER CONTAINER MGMT COMMANDS 
-----------------------------------------------------------------------------------------
docker container run --publish 80:80  nginx

docker container run -p 80:80 nginx

docker container run --publish 80:80  --detach nginx

docker container run --publish 8082:80  -d --name simple-webapp nginx

docker container run -p 8082:80  -d --name simple-webapp nginx

docker run --name mongodb --publish 27017:27017 -d mongo

docker container ls -aq

docker container rm $(docker container ls -aq)

docker container logs simple-webapp

docker container top simple-webapp

docker container stop simple-webapp

docker container start simple-webapp

docker container rm simple-webapp

docker container run -d --name http_webserver -p 8080:80 httpd

curl http://localhost:8080

docker container run -d --name proxy_nginx -p 80:80 nginx

curl http://localhost:80

docker container run -p 3306:3306 -d --name mysqldb -e MYSQL_RANDOM_ROOT_PASSWORD=yes mysql

GENERATED ROOT PASSWORD:eeghees9jooyiejo7Ee8aedengoh5aa5

docker container top proxy_nginx

docker container inspect mysqldb

docker container stats

docker container run -it --name ngproxy nginx bash

docker container start -ai ngproxy

docker container run -p 80:80 --name webhost -d nginx

docker container port webhost

docker container inspect webhost --format '{{.NetworkSettings.IPAddress}}'

docker container ls -a --filter "status=exited"

docker container rm $(docker container ls -aq --filter "status=exited")

docker container ls --filter status="exited" --filter name=^/sample-nginx-3 -q

docker container rm $(docker container ls --filter status=exited --filter name=^/sample-nginx-3 -q)
-----------------------------------------------------------------------------------------
DOCKER CONTAINER INTERACTIVE COMMANDS 
-----------------------------------------------------------------------------------------

docker container run -it --name sample-cent centos

docker container run -it --name sample-ubuntu ubuntu

curl http://192.168.0.108:8080

curl http://192.168.0.108:8081

docker container run -it --name ubuntu ubuntu

docker container run -it --name alpine alpine sh

docker container exec -it cent bash

docker container exec -it ubuntu bash

docker container exec -it mysqldb bash

-----------------------------------------------------------------------------------------
DOCKER CONTAINER HEALTHCHECK COMMANDS 
-----------------------------------------------------------------------------------------
---WITHOUT HEALTHCHECK
docker container run -d --name sample-postgres -e POSTGRES_USER=murugan -e POSTGRES_PASSWORD=murugan123 postgres:13

(base) ➜  learn-docker git:(develop) ✗ docker container ls
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS          PORTS      NAMES
d358afc44dc2   postgres:13   "docker-entrypoint.s…"   17 seconds ago   Up 17 seconds   5432/tcp   sample-postgres

---WITH HEALTHCHECK
docker container run -d --name sample-postgres -e POSTGRES_USER=murugan -e POSTGRES_PASSWORD=murugan123 --health-cmd="pg_isready -U murugan || exit 1"  postgres:13

---first 30 seconds
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                             PORTS      NAMES
b0a91d20a132   postgres:13   "docker-entrypoint.s…"   30 seconds ago   Up 29 seconds (health':' starting)   5432/tcp   sample-postgres

---post 30 seconds after startup health check is done, default interval time is 30 sec.
(base) ➜  learn-docker git:(develop) ✗ docker container ls
CONTAINER ID   IMAGE         COMMAND                  CREATED              STATUS                        PORTS      NAMES
b0a91d20a132   postgres:13   "docker-entrypoint.s…"   About a minute ago   Up About a minute (healthy)   5432/tcp   sample-postgres

