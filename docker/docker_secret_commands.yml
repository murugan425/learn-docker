-----------------------------------------------------------------------------------------
DOCKER SECRET COMMANDS - CREATE
-----------------------------------------------------------------------------------------

1. Create the secrets in the docker host.
-----------------------------------------------------------------------------------------
docker secret create pssql_usr pssql_user.txt

docker secret create pssql_pswd_1 pssql_pswd.txt

echo "murugan12345" | docker secret create pssql_pswd_2 -

docker secret ls

docker secret inspect pssql_usr

echo "murugan1234567890" | docker secret create pssql_prodpw -

2. Use the secrets as environment variables while creating the sample-alp-service.
-----------------------------------------------------------------------------------------
docker service create --name sample-postgres --secret pssql_usr --secret pssql_pswd_2 \
  -e POSTGRES_PASSWORD_FILE=/run/secrets/pssql_pswd_2 -e POSTGRES_USER_FILE=/run/secrets/pssql_usr postgres

docker service create --name sample-postgres -p 5432:5432 --secret pssql_usr --secret pssql_pswd_2 \
  -e POSTGRES_PASSWORD_FILE=/run/secrets/pssql_pswd_2 -e POSTGRES_USER_FILE=/run/secrets/pssql_usr postgres

3. Verify the secret files created inside the container.
-----------------------------------------------------------------------------------------
docker container exec -it <sample-postgres.1-containerid> bash

cd run/secrets/

cat pssql_usr
cat pssql_pswd_2

4. Removal of secrets will redeploy the service containers and that will impact the app.
-----------------------------------------------------------------------------------------
docker service update --secret-rm pssql_usr sample-postgres

5. Using docker-compose to view the secrets in a service
-----------------------------------------------------------------------------------------
docker-compose exec postdb cat /run/secrets/pssql_usr




