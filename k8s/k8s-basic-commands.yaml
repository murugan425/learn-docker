-----------------------------------------------------------------------------------------
KUBERNETES BASIC COMMANDS 
-----------------------------------------------------------------------------------------

kubectl version

kubectl get pods

kubectl run sample-nginx --image nginx

kubectl delete pod sample-nginx

kubectl delete deployments.apps sample-nginx

kubectl create deployment sample-nginx --image nginx

kubectl create deployment sample-http --image httpd

--Dynamically kubectl commands can be changed with little variations
kubectl scale deployment sample-http --replicas 2
kubectl scale deploy sample-http --replicas 2
kubectl scale deployments sample-http --replicas 2
kubectl scale deployment/sample-http --replicas 2
kubectl scale deploy/sample-http --replicas 2

---Display the log of the first pod created in a deployment
kubectl logs deployment/sample-http

---Shows the logs of all the pods that matches a specific label
kubectl logs -l app='sample-http'

-----------------------------------------------------------------------------------------
KUBERNETES EXPOSE PORT COMMANDS 
-----------------------------------------------------------------------------------------
---CLUSTER IP

kubectl create deployment http-env --image bretfisher/httpenv

kubectl scale deploy http-env --replicas 3

kubectl expose deploy/http-env --port 8888
kubectl expose deployment http-env --port 8888 --name http-env-ci

kubectl get service

kubectl run netshoot-shell --rm -it --image nicolaka/netshoot -- /bin/bash

curl http-env:8888

curl 10.111.198.197:8888

curl 10.96.0.1:8888

---NODEPORT IP [Range>>> 30000 - 32767]

kubectl expose deployment http-env --port 8888 --name http-env-ci

kubectl expose deployment http-env --port 8888 --name http-env-np --type NodePort

---LOADBALANCER
kubectl expose deployment http-env --port 8888 --name http-env-lb --type LoadBalancer

---Accessing the namespace content using kube-proxy for dev purpose
kubectl proxy --port=8080 -d 

http://localhost:8080/api/v1/namespaces/<NAMESPACE>/services/<SERVICE-NAME>:<PORT-NAME>/

http://localhost:8080/api/v1/namespaces/default/services/
-----------------------------------------------------------------------------------------
(base) âžœ  ~ kubectl get all
NAME                               READY   STATUS    RESTARTS   AGE
pod/http-env-795cf6d4b5-jwvgv      1/1     Running   0          12m
pod/http-env-795cf6d4b5-mcf4l      1/1     Running   0          14m
pod/http-env-795cf6d4b5-wwxmt      1/1     Running   0          12m
pod/netshoot-shell                      1/1     Running   0          5m20s

NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
service/http-env     ClusterIP   10.111.198.197   <none>        8888/TCP   10m
service/kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP    31h

NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/http-env       3/3     3            3           14m

NAME                                     DESIRED   CURRENT   READY   AGE
replicaset.apps/http-env-795cf6d4b5      3         3         3       14m
-----------------------------------------------------------------------------------------
KUBE GENERATORS
-----------------------------------------------------------------------------------------
kubectl create deployment sample-nginx --image nginx --dry-run=none -o yaml

kubectl create job sample-nginx --image nginx --dry-run=none -o yaml

kubectl expose deployment sample-nginx --port 8888 --dry-run=none -o yaml

-----------------------------------------------------------------------------------------
KUBE YAML - APPLY COMMANDS
-----------------------------------------------------------------------------------------
kubectl api-resources

kubectl explain services --recursive

kubectl apply -f k8s-sample-pod.yaml --dry-run=server

kubectl apply -f k8s-sample-pod.yaml --dry-run=client

kubectl apply -f k8s-sample-deployment.yaml --dry-run=client

kubectl diff -f k8s-sample-deployment.yaml
