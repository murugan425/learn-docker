version: "3"

services:
  vote:
    image: docker/example-voting-app-vote
    networks:
      - voting_frontend_nw
    depends_on:
      - redis
    ports:
      - 5000:80
    deploy:
      mode: replicated
      replicas: 3
      labels: [APP=VOTING]
      update_config: 
        parallelism: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]
  
  redis:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - voting_frontend_nw
    deploy:
      replicas: 1
      update_config: 
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
          constraints: [node.role == manager]

  result:
    image: docker/example-voting-app-result
    ports:
      - 5001:80
    networks:
      - voting_backend_nw
    depends_on:
      - postdb
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  postdb:
    image: postgres:9.4
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - voting_backend_nw
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    deploy:
      placement:
        constraints: [node.role == manager]

  worker:
    #image: docker/example-voting-app-worker - Not working
    image: bretfisher/examplevotingapp_worker:java
    networks:
      - voting_frontend_nw
      - voting_backend_nw
    depends_on:
      - postdb
      - redis
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=VOTING]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 180s
      placement:
        constraints: [node.role == manager]

  visualizer:
    image: dockersamples/visualizer
    ports:
      - 8080:8080
    stop_grace_period: 1m30s
    networks:
      - voting_frontend_nw
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  voting_frontend_nw:
  voting_backend_nw:

volumes:
  db-data:
